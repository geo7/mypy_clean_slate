[tool.poetry]
name = "mypy_clean_slate"
version = "0.1.5"
description = "CLI tool for providing a clean slate for mypy usage within a project."
authors = ["George Lenton <georgelenton@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/geo7/mypy_clean_slate"
keywords = ['mypy', 'typing', 'typehint', 'type-hint']

[tool.poetry.dependencies]
python = "^3.8"
mypy = "^0.910"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
black = "^22.1.0"
pre-commit = "^2.17.0"
pylint = "^2.12.2"
isort = "^5.10.1"
flake8-docstrings = "^1.6.0"
flake8-return = "^1.1.3"
flake8-eradicate = "^1.2.0"
autoflake = "^1.4"
ipython = "^8.0.1"
ipdb = "^0.13.9"

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.scripts]
mypy_clean_slate = "mypy_clean_slate.main:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
default_section = "THIRDPARTY"
known_first_party = "mypy_clean_slate"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
add_imports="from __future__ import annotations"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    # don't want to enforce docstrings.
    "missing-module-docstring",
    "missing-function-docstring",
    # don't care if a class just stores data.
    "too-few-public-methods",
]
good-names = [
    # typically used with T = TypeVar("T")
    'T',
]
